{
  "languageserver": {
    "clangd": {
      "command": "clangd",
      "args": ["--background-index"],
      "rootPatterns": ["compile_flags.txt", "compile_commands.json", ".vim/", ".git/", ".hg/"],
      "filetypes": ["c", "cpp", "objc", "objcpp"]
    },
    "rust": {
      "command": "ra_lsp_server",
      "filetypes": ["rust"],
      "rootPatterns": ["Cargo.toml"]
    },
    "golang": {
      "command": "gopls",
      "args": ["serve", "-debug", "0.0.0.0:8484", "-rpc.trace"],
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "lua": {
      "command": "lua-lsp",
      "filetypes": ["lua"],
      "enable": true,
      "useSumnekoLs": true
    },
    "haskell": {
      "command": "hie-wrapper",
      "rootPatterns": [
        ".stack.yaml",
        "cabal.config",
        "package.yaml"
      ],
      "filetypes": [
        "hs",
        "lhs",
        "haskell"
      ],
      "initializationOptions": {
        "languageServerHaskell": {
        }
      }
    },
    "efm": {
      "command": "efm-langserver",
      "args": ["-c", "~/.config/efm-langserver/config.yaml"],
      "filetypes": [ "eruby", "yaml"]
    },
    "python": {
      "command": "python",
      "args": [
        "-mpyls",
        "-vv",
        "--log-file",
        "/tmp/lsp_python.log"
      ],
      "trace.server": "verbose",
      "filetypes": [
        "python"
      ],
      "settings": {
        "pyls": {
          "enable": false,
          "trace": {
            "server": "verbose"
          },
          "commandPath": "",
          "configurationSources": [
            "pycodestyle"
          ],
          "plugins": {
            "jedi_completion": {
              "enabled": true
            },
            "jedi_hover": {
              "enabled": true
            },
            "jedi_references": {
              "enabled": true
            },
            "jedi_signature_help": {
              "enabled": true
            },
            "jedi_symbols": {
              "enabled": true,
              "all_scopes": true
            },
            "mccabe": {
              "enabled": true,
              "threshold": 15
            },
            "preload": {
              "enabled": true
            },
            "pycodestyle": {
              "enabled": false
            },
            "pydocstyle": {
              "enabled": true,
              "match": "(?!test_).*\\.py",
              "matchDir": "[^\\.].*"
            },
            "pyflakes": {
              "enabled": false
            },
            "flake8": {
              "enable": true
            },
            "rope_completion": {
              "enabled": true
            },
            "yapf": {
              "enabled": true
            }
          }
        }
      }
    },
    "vimls": {
      "command": "vim-language-server",
      "args": ["--stdio"],
      "initializationOptions": {
        "iskeyword": "@,48-57,_,192-255,-#", // vim iskeyword option
        "vimruntime": "",                    // $VIMRUNTIME option
        "runtimepath": "",                   // vim runtime path separate by `,`
        "diagnostic": {
          "enable": true
        },
        "indexes": {
          // if index runtimepath's vim files this will effect the suggest
          "runtimepath": true,
          // index time gap between next file
          "gap": 100,
          // count of files index at the same time
          "count": 3,
          // Names of files used as the mark of project root.
          // If empty, the default value [".git", "autoload", "plugin"] will be used
          "projectRootPatterns" : ["strange-root-pattern", ".git", "autoload", "plugin"]
        },
        "suggest": {
          // completionItems from vimruntime's vim files
          "fromVimruntime": true,
          // completionItems from runtimepath's vim files, if this is true that fromVimruntime is true
          "fromRuntimepath": false
        }
      },
      "filetypes": ["vim"]
    },
    "metals": {
      "command": "metals-vim",
      "rootPatterns": ["build.sbt"],
      "filetypes": ["scala", "sbt"]
    },
    "latex": {
      "command": "$HOME/.config/coc/extensions/coc-texlab-data/texlab",
      "ignoredRootPaths": ["~"],
      "filetypes": ["tex", "bib", "plaintex", "context"]
    },
    "julia": {
      "command": "/usr/bin/julia",
      "args" : ["--startup-file=no", "--history-file=no", "-e", "using LanguageServer; using Pkg; import StaticLint; import SymbolServer; env_path = dirname(Pkg.Types.Context().env.project_file); debug = false; server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict()); server.runlinter = true; run(server);"],
      "filetypes": ["julia"]
    }
  },
  "suggest.enablePreselect": true,
  "solargraph.commandPath": "/home/ginta/.rbenv/versions/2.6.3/bin/solargraph",
  "solargraph.diagnostics": true,
  "solargraph.autoformat": true,
  "solargraph.formatting": true,
  "solargraph.hover": true,
  "diagnostic.checkCurrentLine": true,
  "diagnostic.errorSign": " ",
  "diagnostic.warningSign": " ",
  "diagnostic.infoSign": " "
}
